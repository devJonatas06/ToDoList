version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: todolist-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:todolist_db}
      POSTGRES_USER: ${POSTGRES_USER:postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - todolist-network
    restart: unless-stopped

  # Back-end Spring Boot
  back-end:
    build: ./backend
    container_name: todolist-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/todolist_db}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME:postgres}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD:}
      API_SECURITY_TOKEN_SECRET: ${API_SECURITY_TOKEN_SECRET:}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:http://front-end:80}
    depends_on:
      - postgres
    networks:
      - todolist-network
    restart: unless-stopped

  # Front-end Angular
  front-end:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: todolist-frontend
    ports:
      - "4200:80"
    depends_on:
      - back-end
    networks:
      - todolist-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  todolist-network:
    driver: bridge
